## AUTO GENERATED
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: pc-web
  namespace: demo
  labels:
    app: pc-web
    app.kubernetes.io/name: pc-web
    app.kubernetes.io/part-of: demo-microservice
  annotations:
    notifications.argoproj.io/subscribe.on-rollout-completed.slack: k8s-stage
    notifications.argoproj.io/subscribe.on-rollout-step-completed.slack: k8s-stage
    notifications.argoproj.io/subscribe.on-rollout-updated.slack: k8s-stage
    notifications.argoproj.io/subscribe.on-scaling-replica-set.slack: k8s-stage
spec:
  replicas: 3
  revisionHistoryLimit: 2
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: pc-web
      app.kubernetes.io/part-of: demo-microservice
  template:
    metadata:
      labels:
        app: pc-web
        version: 1.0.6
        app.kubernetes.io/name: pc-web
        app.kubernetes.io/part-of: demo-microservice
        app.kubernetes.io/version: 1.0.6
      annotations:
        ad.datadoghq.com/pc-web.logs: |-
          [
            {
              "source": "nodejs",
              "service": "your-prefix-pc-web",
              "log_processing_rules": [
                {
                  "type": "include_at_match",
                  "name": "log_level_filter",
                  "pattern": "\"level\":\"(WARN|ERROR)\""
                }
              ]
            }
          ]
    spec:
      containers:
        - name: pc-web
          env:
            - name: PORT
              value: "80"
          image: ghcr.io/himenon/http-echo:1.0.6
          ports:
            - containerPort: 80
          livenessProbe:
            failureThreshold: 3
            timeoutSeconds: 3
            initialDelaySeconds: 15
            httpGet:
              path: /status
              port: 80
          readinessProbe:
            failureThreshold: 3
            timeoutSeconds: 3
            initialDelaySeconds: 15
            httpGet:
              path: /status
              port: 80
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: "0.1"
              memory: 100Mi
      imagePullSecrets:
        - name: hub.docker.com
      nodeSelector: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - pc-web
  strategy:
    canary:
      trafficRouting:
        istio:
          virtualService:
            name: pc-web
            routes:
              - http-pc-web-primary
      maxSurge: 25%
      stableService: pc-web-primary
      canaryService: pc-web-secondary
      dynamicStableScale: true
      steps:
        - setCanaryScale:
            replicas: 3
            matchTrafficWeight: true
        - pause:
            duration: 10
        - setWeight: 25
        - setCanaryScale:
            replicas: 1
            matchTrafficWeight: true
        - pause:
            duration: 10
        - setWeight: 50
        - setCanaryScale:
            replicas: 2
            matchTrafficWeight: true
        - pause:
            duration: 10
        - setWeight: 75
        - setCanaryScale:
            replicas: 3
            matchTrafficWeight: true
        - pause:
            duration: 10
        - setWeight: 100
